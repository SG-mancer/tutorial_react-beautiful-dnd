{"ast":null,"code":"var _jsxFileName = \"/Users/shgeorge/Workshop/tutorial_react-beautiful-dnd/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport '@atlaskit/css-reset';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Column from './column';\nconst Container = styled.div`\n  display: flex;\n  `;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialData;\n\n    this.addItem = () => {\n      //handle adding a new item\n      // follow points from https://medium.com/js-geek/create-a-simple-todo-app-in-react-72d9341a7e6c to learn how to add items\n      const newTasks = this.state.tasks;\n      const newTask = {\n        id: 'task-5',\n        content: 'TEST'\n      };\n      newTasks[\"item-5\"] = newTask;\n      const column = this.state.columns[\"column-1\"];\n      const newTaskIds = Array.from(column.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n      const newState = { ...this.state,\n        tasks: newTasks\n      };\n      this.setState(newState);\n    };\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const start = this.state.columns[source.droppableId];\n      const finish = this.state.columns[destination.droppableId];\n\n      if (start === finish) {\n        const column = start;\n        const newTaskIds = Array.from(column.taskIds); //newTaskIds.splice(source.index, 1);\n\n        newTaskIds.splice(destination.index, 0, draggableId);\n        const newColumn = { ...column,\n          taskIds: newTaskIds\n        };\n        const newState = { ...this.state,\n          columns: { ...this.state.columns,\n            [newColumn.id]: newColumn\n          }\n        };\n        this.setState(newState);\n        return;\n      } // Moving from one list to another\n\n\n      const startTaskIds = Array.from(start.taskIds);\n      startTaskIds.splice(source.index, 1);\n      const newStart = { ...start,\n        taskIds: startTaskIds\n      };\n      const finishTaskIds = Array.from(finish.taskIds);\n      finishTaskIds.splice(destination.index, 0, draggableId);\n      const newFinish = { ...finish,\n        taskIds: finishTaskIds\n      };\n      const newState = { ...this.state,\n        columns: { ...this.state.columns,\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        }\n      };\n      this.setState(newState);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, this.state.columnOrder.map(columnId => {\n      const column = this.state.columns[columnId];\n      const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n      return /*#__PURE__*/React.createElement(Column, {\n        key: column.id,\n        column: column,\n        tasks: tasks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 20\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \" Add Task \")));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));","map":{"version":3,"sources":["/Users/shgeorge/Workshop/tutorial_react-beautiful-dnd/src/index.js"],"names":["React","ReactDOM","styled","DragDropContext","initialData","Column","Container","div","App","Component","state","addItem","newTasks","tasks","newTask","id","content","column","columns","newTaskIds","Array","from","taskIds","splice","source","index","destination","draggableId","newState","setState","onDragEnd","result","droppableId","start","finish","newColumn","startTaskIds","newStart","finishTaskIds","newFinish","render","columnOrder","map","columnId","taskId","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport '@atlaskit/css-reset';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Column from './column';\n\nconst Container = styled.div`\n  display: flex;\n  `;\n\nclass App extends React.Component {\n  state = initialData;\n\n  addItem = () => {\n    //handle adding a new item\n    // follow points from https://medium.com/js-geek/create-a-simple-todo-app-in-react-72d9341a7e6c to learn how to add items\n\n    const newTasks = this.state.tasks;\n    const newTask = {id: 'task-5', content: 'TEST'};\n    newTasks[\"item-5\"] = newTask;\n\n    const column = this.state.columns[\"column-1\"];\n    const newTaskIds = Array.from(column.taskIds);\n    newTaskIds.splice(source.index, 1);\n    newTaskIds.splice(destination.index, 0, draggableId);\n\n\n    const newState = {\n      ...this.state,\n      tasks: newTasks,\n    };\n    this.setState(newState);\n\n  }\n\n  //Moving Items\n  onDragEnd = result =>{\n    const {destination, source, draggableId} = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const start = this.state.columns[source.droppableId];\n    const finish = this.state.columns[destination.droppableId];\n\n    if (start === finish) {\n      const column = start;\n      const newTaskIds = Array.from(column.taskIds);\n      //newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n        \n      const newColumn = {\n        ...column,\n        taskIds: newTaskIds,\n      };\n    \n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      this.setState(newState);\n      return;\n    }\n  \n    // Moving from one list to another\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n    this.setState(newState);\n  };\n\n  render() {\n      return (\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Container>\n          {this.state.columnOrder.map(columnId =>{\n            const column = this.state.columns[columnId];\n            const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n\n            return <Column key={column.id} column={column} tasks={tasks} />;\n          })}\n          </Container>\n\n          <form onSubmit={this.addItem}>\n            <input placeholder=\"Task\" />\n            <button type=\"submit\"> Add Task </button>\n          </form>\n        </DragDropContext>\n      );\n  }\n} \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}